# Fermi API Gateway - Cloudflare Proxied Configuration for api.fermi.trade
# Production-grade configuration with rate limiting and security
# Designed to work behind Cloudflare proxy (SSL handled by Cloudflare)

# Rate limiting zones - protect against abuse
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=50r/s;
limit_req_zone $binary_remote_addr zone=api_strict:10m rate=20r/s;

# Connection limiting - prevent connection exhaustion
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Upstream backend (API Gateway on port 8080)
upstream fermi_gateway {
    server 127.0.0.1:8080 max_fails=3 fail_timeout=30s;
    keepalive 32;
    keepalive_requests 1000;
    keepalive_timeout 60s;
}

# HTTP server
server {
    listen 80;
    listen [::]:80;
    server_name api.fermi.trade;

    # Remove nginx version from headers
    server_tokens off;

    # Connection limits per IP
    limit_conn addr 10;

    # Client body size limit - prevent large request DoS
    client_max_body_size 10m;
    client_body_timeout 10s;
    client_header_timeout 10s;

    # Logging
    access_log /var/log/nginx/fermi-gateway-access.log combined;
    error_log /var/log/nginx/fermi-gateway-error.log warn;

    # Cloudflare real IP restoration
    # Trust Cloudflare IPs for X-Forwarded-For
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2a06:98c0::/29;
    set_real_ip_from 2c0f:f248::/32;
    real_ip_header CF-Connecting-IP;
    real_ip_recursive on;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Compression - improve performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/atom+xml;
    gzip_disable "msie6";

    # Health check endpoint (no buffering)
    location /health {
        proxy_pass http://fermi_gateway;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_cf_visitor;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;

        access_log off;  # Don't log health checks
    }

    # Ready check endpoint
    location /ready {
        proxy_pass http://fermi_gateway;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_cf_visitor;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;
    }

    # Metrics endpoint - RESTRICTED ACCESS
    location /metrics {
        # Restrict access to internal IPs only (modify as needed)
        allow 127.0.0.1;           # localhost
        allow 10.0.0.0/8;          # Private network
        allow 172.16.0.0/12;       # Private network
        allow 192.168.0.0/16;      # Private network
        deny all;                  # Block all other IPs

        proxy_pass http://fermi_gateway;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        access_log off;  # Don't log metrics scraping
    }

    # SSE streaming endpoint - special handling for long-running connections
    location /api/v1/continuum/stream-ticks {
        # Rate limiting - stricter for streaming (20 req/sec)
        limit_req zone=api_strict burst=10 nodelay;
        limit_req_status 429;

        proxy_pass http://fermi_gateway;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_cf_visitor;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;
        proxy_set_header Connection "";

        # SSE-specific settings - CRITICAL for streaming
        proxy_buffering off;                    # Disable buffering for real-time streaming
        proxy_cache off;                        # Disable caching
        proxy_read_timeout 24h;                 # Keep connection alive for long-running streams
        proxy_connect_timeout 10s;
        proxy_send_timeout 24h;

        # SSE headers
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header X-Accel-Buffering "no";      # Nginx-specific: disable buffering

        # Chunked transfer encoding (required for SSE)
        chunked_transfer_encoding on;
    }

    # API endpoints
    location /api/ {
        # Rate limiting - 50 req/sec with burst capacity
        limit_req zone=api burst=20 nodelay;
        limit_req_status 429;

        proxy_pass http://fermi_gateway;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_cf_visitor;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;
        proxy_set_header Connection "";

        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;

        # Error handling - retry on upstream failures
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;
    }

    # Root endpoint and catch-all
    location / {
        # Rate limiting - more lenient for general endpoints (100 req/sec)
        limit_req zone=general burst=50 nodelay;
        limit_req_status 429;

        proxy_pass http://fermi_gateway;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_cf_visitor;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;
        proxy_set_header Connection "";

        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }

    # Block access to hidden files (security)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Custom error pages
    error_page 429 /429.json;
    location = /429.json {
        internal;
        default_type application/json;
        return 429 '{"error":"rate_limit_exceeded","message":"Too many requests. Please slow down and try again later."}';
    }

    error_page 502 503 504 /50x.json;
    location = /50x.json {
        internal;
        default_type application/json;
        return 503 '{"error":"service_unavailable","message":"The gateway is temporarily unavailable. Please try again later."}';
    }

    error_page 403 /403.json;
    location = /403.json {
        internal;
        default_type application/json;
        return 403 '{"error":"forbidden","message":"Access denied."}';
    }

    error_page 404 /404.json;
    location = /404.json {
        internal;
        default_type application/json;
        return 404 '{"error":"not_found","message":"The requested resource was not found."}';
    }
}
